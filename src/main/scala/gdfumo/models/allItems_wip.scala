package gdfumo

import io.circe.{Codec, Decoder, Encoder}
import io.circe.generic.JsonCodec
import io.circe.generic.semiauto.deriveCodec
import datatype.{ListOrItem, StringOrElse}

case class allItems_1(
  l: String,
  itemLevel: Int,
  completedRelicLevel: Option[BigDecimal],
  offensiveFireMax: Option[BigDecimal],
  offensiveSlowPoisonChance: Option[BigDecimal],
  retaliationStunChance: Option[BigDecimal],
  dlcRequirement: Option[List[Int]],
  e: Option[String],
  offensiveSlowColdChance: Option[BigDecimal],
  characterMeleeStrengthReqReduction: Option[BigDecimal],
  modifiedSkillName5: Option[String],
  offensiveTotalResistanceReductionPercentChance: Option[BigDecimal],
  skillManaCostReduction: Option[BigDecimal],
  racialBonusAbsoluteDamage: Option[BigDecimal],
  transmuteDbrs: Option[Map[String, StringOrElse[Int]]],
  characterConstitutionModifier: Option[BigDecimal],
  offensiveSlowLightningMin: Option[BigDecimal],
  offensiveBaseChaosMax: Option[BigDecimal],
  offensivePierceMax: Option[BigDecimal],
  reagentBaseQuantity: Option[BigDecimal],
  retaliationFireModifier: Option[BigDecimal],
  retaliationSlowAttackSpeedMin: Option[BigDecimal],
  offensiveSlowFireDurationMin: Option[BigDecimal],
  offensiveColdGlobal: Option[BigDecimal],
  fromBlacksmith: Option[BigDecimal],
  experienceBonus: Option[BigDecimal],
  offensiveLifeModifier: Option[BigDecimal],
  offensiveKnockdownChance: Option[BigDecimal],
  infiniteUse: Option[BigDecimal],
  offensiveSlowColdModifierChance: Option[BigDecimal],
  defensivePercentCurrentLife: Option[BigDecimal],
  defensivePoisonDuration: Option[BigDecimal],
  fullBitmap: Option[String],
  offensiveSlowDefensiveAbilityDurationMin: Option[BigDecimal],
  offensiveFireMin: Option[BigDecimal],
  offensiveStunChance: Option[BigDecimal],
  offensivePoisonMax: Option[BigDecimal],
  racialBonusPercentDamage: Option[BigDecimal],
  offensiveBonusPhysicalMax: Option[BigDecimal],
  offensiveSlowBleedingChance: Option[BigDecimal],
  conversionOutType2: Option[String],
  defensivePhysicalChance: Option[BigDecimal],
  offensiveColdModifier: Option[BigDecimal],
  offensiveConfusionChance: Option[BigDecimal],
  characterDefensiveAbility: Option[BigDecimal],
  augmentSkillLevel1: Option[BigDecimal],
  offensiveTotalResistanceReductionAbsoluteMin: Option[BigDecimal],
  reagent2BaseName: Option[String],
  offensiveColdMax: Option[BigDecimal],
  offensiveGlobalChance: Option[BigDecimal],
  defensiveProtectionModifier: Option[BigDecimal],
  n: Option[String],
  offensiveChaosMax: Option[BigDecimal],
  augmentSkillName2: Option[String],
  defensiveAetherMaxResist: Option[BigDecimal],
  defensiveFire: Option[BigDecimal],
  offensiveLightningModifierChance: Option[BigDecimal],
  defensivePetrify: Option[BigDecimal],
  characterLifeModifier: Option[BigDecimal],
  offensiveLightningGlobal: Option[BigDecimal],
  offensiveSlowFireMin: Option[BigDecimal],
  defensiveBlockAmountModifier: Option[BigDecimal],
  offensiveFireModifierChance: Option[BigDecimal],
  offensiveSlowLifeDurationModifier: Option[BigDecimal],
  defensiveLifeMaxResist: Option[BigDecimal],
  defensiveLightningMaxResist: Option[BigDecimal],
  defensivePoison: Option[BigDecimal],
  defensiveElementalResistanceChance: Option[BigDecimal],
  defensiveTrap: Option[BigDecimal],
  modifierSkillName2: Option[String],
  questFile5: Option[String],
  offensiveSlowAttackSpeedDurationMin: Option[BigDecimal],
  offensiveFireModifier: Option[BigDecimal],
  offensiveColdModifierChance: Option[BigDecimal],
  characterLifeRegen: Option[BigDecimal],
  offensiveFreezeMin: Option[BigDecimal],
  offensiveTotalDamageReductionPercentChance: Option[BigDecimal],
  offensiveSlowPhysicalDurationModifier: Option[BigDecimal],
  defensiveDisruption: Option[BigDecimal],
  artifactCreationCost: Option[BigDecimal],
  characterDexterityModifier: Option[BigDecimal],
  defensiveFireMaxResist: Option[BigDecimal],
  offensiveSlowRunSpeedMin: Option[BigDecimal],
  defensivePierce: Option[BigDecimal],
  retaliationColdMax: Option[BigDecimal],
  offensiveTotalDamageReductionPercentDurationMin: Option[BigDecimal],
  offensiveBaseLifeMin: Option[BigDecimal],
  reagent1Quantity: Option[BigDecimal],
  offensivePhysicalModifier: Option[BigDecimal],
  defensiveSlowLifeLeach: Option[BigDecimal],
  retaliationFearMin: Option[BigDecimal],
  augmentMasteryLevel2: Option[BigDecimal],
  blockRecoveryTime: Option[BigDecimal],
  offensivePhysicalModifierChance: Option[BigDecimal],
  factionSource: Option[String],
  untradeable: Option[BigDecimal],
  offensiveBasePoisonMin: Option[BigDecimal],
  offensiveSlowLifeModifier: Option[BigDecimal],
  hideLegs: Option[BigDecimal],
  augmentAllLevel: Option[BigDecimal],
  f: Option[String],
  characterWeaponStrengthReqReduction: Option[BigDecimal],
  retaliationFireMin: Option[BigDecimal],
  offensiveSlowBleedingDurationMin: Option[BigDecimal],
  augmentMasteryLevel1: Option[BigDecimal],
  offensivePoisonModifier: Option[BigDecimal],
  offensiveSlowPoisonModifier: Option[BigDecimal],
  offensiveLightningModifier: Option[BigDecimal],
  retaliationPoisonMin: Option[BigDecimal],
  defensiveChaosMaxResist: Option[BigDecimal],
  offensiveSlowColdMin: Option[BigDecimal],
  itemSkillName: Option[String],
  replacementAnimsMale: Option[Map[String, StringOrElse[BigDecimal]]],
  modifiedSkillName2: Option[String],
  retaliationSlowManaLeachDurationMin: Option[BigDecimal],
  characterLifeRegenModifier: Option[BigDecimal],
  questFile4: Option[String],
  reagent5BaseName: Option[String],
  characterEnergyAbsorptionPercent: Option[BigDecimal],
  retaliationPoisonModifier: Option[BigDecimal],
  offensiveStunMin: Option[BigDecimal],
  reagent4Quantity: Option[BigDecimal],
  offensivePierceMin: Option[BigDecimal],
  offensiveKnockdownMin: Option[BigDecimal],
  offensiveFreezeChance: Option[BigDecimal],
  characterArmorStrengthReqReduction: Option[BigDecimal],
  onDrop: Option[String],
  augmentSkillLevel2: Option[BigDecimal],
  offensivePhysicalChance: Option[BigDecimal],
  retaliationFearChance: Option[BigDecimal],
  characterManaRegen: Option[BigDecimal],
  offensiveBaseFireMin: Option[BigDecimal],
  factions: Option[List[String]],
  characterDeflectProjectile: Option[BigDecimal],
  characterRunSpeedModifier: Option[BigDecimal],
  a: Option[String],
  offensiveSlowLifeMin: Option[BigDecimal],
  modifierSkillName1: Option[String],
  offensiveAetherMin: Option[BigDecimal],
  characterSpellCastSpeedModifier: Option[BigDecimal],
  defensiveBlockChance: Option[BigDecimal],
  offensivePhysicalReductionPercentMin: Option[BigDecimal],
  characterDodgePercent: Option[BigDecimal],
  defensiveColdMaxResist: Option[BigDecimal],
  offensiveSlowLightningDurationModifier: Option[BigDecimal],
  offensiveSlowManaLeachDurationMin: Option[BigDecimal],
  characterDefensiveAbilityModifier: Option[BigDecimal],
  offensiveSlowPhysicalDurationMin: Option[BigDecimal],
  MI: Option[Boolean],
  offensiveSlowLightningModifierChance: Option[BigDecimal],
  itemQualityTag: Option[String],
  offensiveSlowManaLeachMin: Option[BigDecimal],
  templateName: Option[String],
  offensiveConfusionMin: Option[BigDecimal],
  m: Option[String],
  strengthRequirement: Option[BigDecimal],
  offensivePoisonMin: Option[BigDecimal],
  retaliationTotalDamageModifier: Option[BigDecimal],
  offensiveAetherModifierChance: Option[BigDecimal],
  offensiveTotalResistanceReductionAbsoluteChance: Option[BigDecimal],
  offensiveChaosModifier: Option[BigDecimal],
  offensiveSlowPhysicalMax: Option[BigDecimal],
  augmentSkillName1: Option[String],
  offensiveBaseColdMin: Option[BigDecimal],
  offensivePercentCurrentLifeMin: Option[BigDecimal],
  offensiveSlowLightningDurationMin: Option[BigDecimal],
  characterMana: Option[BigDecimal],
  defensiveChaos: Option[BigDecimal],
  modifierSkillName5: Option[String],
  offensiveTotalDamageModifier: Option[BigDecimal],
  offensivePierceChance: Option[BigDecimal],
  offensiveSlowBleedingMax: Option[BigDecimal],
  retaliationFreezeMin: Option[BigDecimal],
  artifactName: Option[String],
  offensiveTotalResistanceReductionPercentMin: Option[BigDecimal],
  offensiveChaosChance: Option[BigDecimal],
  defensiveAether: Option[BigDecimal],
  offensiveSlowFireModifier: Option[BigDecimal],
  offensiveLifeLeechMin: Option[BigDecimal],
  skillProjectileSpeedModifier: Option[BigDecimal],
  blockAbsorption: Option[BigDecimal],
  characterLife: Option[BigDecimal],
  retaliationStunMin: Option[BigDecimal],
  mods: Option[List[String]],
  offensiveBaseColdMax: Option[BigDecimal],
  retaliationLifeMin: Option[BigDecimal],
  offensiveSlowPoisonMin: Option[BigDecimal],
  conversionInType: Option[String],
  hideShoulders: Option[BigDecimal],
  offensiveSlowBleedingDurationModifier: Option[BigDecimal],
  defensiveBlock: Option[BigDecimal],
  artifactClassification: Option[String],
  offensiveLifeMin: Option[BigDecimal],
  racialBonusRace: Option[ListOrItem[String]],
  itemSkillLevelEq: Option[StringOrElse[Int]]
)
object allItems_1 {
  implicit val codecJson: Codec.AsObject[allItems_1] = deriveCodec
}

case class allItems_2(
  taskUID4: Option[BigDecimal],
  modifiedSkillName3: Option[String],
  offensiveSlowRunSpeedChance: Option[BigDecimal],
  defensivePoisonMaxResist: Option[BigDecimal],
  retaliationPhysicalMax: Option[BigDecimal],
  offensiveElementalMin: Option[BigDecimal],
  offensivePierceRatioModifier: Option[BigDecimal],
  transmuteTag: Option[String],
  offensiveSlowPhysicalChance: Option[BigDecimal],
  defensiveBleedingMaxResist: Option[BigDecimal],
  offensiveSlowPhysicalMin: Option[BigDecimal],
  characterIncreasedExperience: Option[BigDecimal],
  retaliationPoisonMax: Option[BigDecimal],
  offensiveFumbleMin: Option[BigDecimal],
  offensiveSlowPhysicalModifier: Option[BigDecimal],
  characterLightRadius: Option[BigDecimal],
  skillName: Option[String],
  offensiveTotalDamageModifierChance: Option[BigDecimal],
  reagent3BaseName: Option[String],
  retaliationSlowPoisonMin: Option[BigDecimal],
  offensiveSlowBleedingModifierChance: Option[BigDecimal],
  retaliationPhysicalChance: Option[BigDecimal],
  defensiveFreezeChance: Option[BigDecimal],
  defensiveColdDuration: Option[BigDecimal],
  skillCooldownReduction: Option[BigDecimal],
  augmentSkillLevel3: Option[BigDecimal],
  offensiveSlowLifeChance: Option[BigDecimal],
  retaliationFreezeChance: Option[BigDecimal],
  offensiveSlowTotalSpeedMin: Option[BigDecimal],
  defensiveLightningDuration: Option[BigDecimal],
  modifiedSkillName1: Option[String],
  b: Option[String],
  offensiveSlowRunSpeedDurationMin: Option[BigDecimal],
  retaliationLightningModifier: Option[BigDecimal],
  offensiveTotalResistanceReductionPercentDurationMin: Option[BigDecimal],
  artifactCreateQuantity: Option[BigDecimal],
  conversionOutType: Option[String],
  forcedRelicCompletion: Option[BigDecimal],
  offensiveBasePoisonMax: Option[BigDecimal],
  defensivePhysical: Option[BigDecimal],
  offensiveStunModifier: Option[BigDecimal],
  offensiveSlowColdDurationMin: Option[BigDecimal],
  retaliationSlowLightningDurationMin: Option[BigDecimal],
  retaliationSlowLightningMin: Option[BigDecimal],
  g: Option[String],
  offensiveSlowPoisonDurationMin: Option[BigDecimal],
  defensiveBlockModifier: Option[BigDecimal],
  defensiveTotalSpeedResistance: Option[BigDecimal],
  alternateMesh: Option[String],
  characterHealIncreasePercent: Option[BigDecimal],
  retaliationFireMax: Option[BigDecimal],
  offensiveBaseLifeMax: Option[BigDecimal],
  retaliationLightningMax: Option[BigDecimal],
  defensiveFreeze: Option[BigDecimal],
  modifierSkillName4: Option[String],
  characterIntelligenceModifier: Option[BigDecimal],
  offensiveElementalMax: Option[BigDecimal],
  retaliationSlowManaLeachMin: Option[BigDecimal],
  retaliationSlowPoisonDurationMin: Option[BigDecimal],
  bitmapFemale: Option[String],
  offensiveBaseLightningMin: Option[BigDecimal],
  p: Option[BigDecimal],
  replacementAnimsFemale: Option[Map[String, StringOrElse[BigDecimal]]],
  offensiveBaseLightningMax: Option[BigDecimal],
  offensiveSlowBleedingMin: Option[BigDecimal],
  offensivePhysicalMax: Option[BigDecimal],
  defensivePierceMaxResist: Option[BigDecimal],
  retaliationPoisonChance: Option[BigDecimal],
  offensiveSlowDefensiveAbilityMin: Option[BigDecimal],
  offensiveSlowFireChance: Option[BigDecimal],
  cls: Option[List[String]],
  characterManaRegenModifier: Option[BigDecimal],
  retaliationSlowLightningChance: Option[BigDecimal],
  offensiveSlowLifeDurationMin: Option[BigDecimal],
  taskUID5: Option[BigDecimal],
  offensiveSlowColdDurationModifier: Option[BigDecimal],
  characterStrengthModifier: Option[BigDecimal],
  offensiveSlowManaLeachChance: Option[BigDecimal],
  augmentSkillLevel4: Option[BigDecimal],
  offensiveColdMin: Option[BigDecimal],
  retaliationTotalDamageModifierChance: Option[BigDecimal],
  retaliationConfusionChance: Option[BigDecimal],
  offensiveSlowTotalSpeedChance: Option[BigDecimal],
  retaliationColdMin: Option[BigDecimal],
  augmentMasteryName3: Option[String],
  offensiveElementalModifier: Option[BigDecimal],
  defensiveLightning: Option[BigDecimal],
  offensiveSlowLightningChance: Option[BigDecimal],
  conversionPercentage: Option[BigDecimal],
  characterHuntingDexterityReqReduction: Option[BigDecimal],
  reagent5Quantity: Option[BigDecimal],
  offensiveBonusPhysicalMin: Option[BigDecimal],
  offensiveBaseAetherMin: Option[BigDecimal],
  characterMeleeIntelligenceReqReduction: Option[BigDecimal],
  retaliationPhysicalMin: Option[BigDecimal],
  maxStackSize: Option[BigDecimal],
  augmentMasteryName1: Option[String],
  offensiveSlowAttackSpeedMin: Option[BigDecimal],
  offensiveFireGlobal: Option[BigDecimal],
  offensiveSlowFireGlobal: Option[BigDecimal],
  offensiveSlowColdGlobal: Option[BigDecimal],
  offensiveBaseFireMax: Option[BigDecimal],
  offensiveSlowPoisonDurationModifier: Option[BigDecimal],
  characterTotalSpeedModifier: Option[BigDecimal],
  characterManaModifier: Option[BigDecimal],
  defensiveCold: Option[BigDecimal],
  retaliationLightningMin: Option[BigDecimal],
  defensivePercentReflectionResistance: Option[BigDecimal],
  itemSkillAutoController: Option[String],
  characterAttackSpeedModifier: Option[BigDecimal],
  offensiveSlowTotalSpeedDurationMin: Option[BigDecimal],
  offensivePhysicalMin: Option[BigDecimal],
  defensiveProtection: Option[BigDecimal],
  h: Option[BigDecimal],
  defensiveSlowManaLeach: Option[BigDecimal],
  racialBonusPercentDefense: Option[BigDecimal],
  conversionPercentage2: Option[BigDecimal],
  offensiveSlowLightningGlobal: Option[BigDecimal],
  characterLevelReqReduction: Option[BigDecimal],
  offensiveBaseChaosMin: Option[BigDecimal],
  `type`: Option[String],
  offensiveChaosMin: Option[BigDecimal],
  retaliationElementalMin: Option[BigDecimal],
  augmentSkillName4: Option[String],
  reagent4BaseName: Option[String],
  defensiveBonusProtection: Option[BigDecimal],
  offensiveSlowDefensiveAbilityChance: Option[BigDecimal],
  retaliationSlowFireMin: Option[BigDecimal],
  offensiveSlowColdModifier: Option[BigDecimal],
  characterStrength: Option[BigDecimal],
  defensiveBleedingDuration: Option[BigDecimal],
  characterOffensiveAbility: Option[BigDecimal],
  offensiveSlowFireModifierChance: Option[BigDecimal],
  offensiveSlowFireDurationModifier: Option[BigDecimal],
  offensiveAetherModifier: Option[BigDecimal],
  defensiveProtectionChance: Option[BigDecimal],
  characterDexterity: Option[BigDecimal],
  defensiveBleedingDurationModifier: Option[BigDecimal],
  offensivePoisonChance: Option[BigDecimal],
  defensiveLife: Option[BigDecimal],
  retaliationAetherMin: Option[BigDecimal],
  offensiveBaseAetherMax: Option[BigDecimal],
  modifierSkillName3: Option[String],
  defensiveFireDuration: Option[BigDecimal],
  conversionInType2: Option[String],
  offensiveSlowLightningModifier: Option[BigDecimal],
  offensiveSlowFireMax: Option[BigDecimal],
  offensiveLightningMin: Option[BigDecimal],
  k: Option[BigDecimal],
  characterIntelligence: Option[BigDecimal],
  reagent2Quantity: Option[BigDecimal],
  offensiveAetherMax: Option[BigDecimal],
  uniqueRare: Option[Boolean],
  offensivePierceModifier: Option[BigDecimal],
  retaliationSlowFireDurationMin: Option[BigDecimal],
  characterDefensiveBlockRecoveryReduction: Option[BigDecimal],
  offensiveLifeMax: Option[BigDecimal],
  characterOffensiveAbilityModifier: Option[BigDecimal],
  retaliationSlowAttackSpeedDurationMin: Option[BigDecimal],
  defensiveBleeding: Option[BigDecimal],
  defensiveAllMaxResist: Option[BigDecimal],
  defensiveStun: Option[BigDecimal],
  bonusTableName: Option[String],
  defensiveAbsorptionModifier: Option[BigDecimal],
  offensiveFumbleDurationMin: Option[BigDecimal],
  offensivePierceRatioMin: Option[BigDecimal],
  offensiveTotalResistanceReductionAbsoluteDurationMin: Option[BigDecimal],
  augmentSkillName3: Option[String],
  retaliationConfusionMin: Option[BigDecimal],
  petBonusName: Option[String],
  itemStyleTag: Option[String],
  offensiveSlowBleedingModifier: Option[BigDecimal],
  augmentMasteryName2: Option[String],
  reagent1BaseName: Option[String],
  offensiveTotalDamageReductionPercentMin: Option[BigDecimal],
  offensivePhysicalReductionPercentDurationMin: Option[BigDecimal],
  o: Option[String],
  augmentMasteryLevel3: Option[BigDecimal],
  offensiveCritDamageModifier: Option[BigDecimal],
  characterMeleeDexterityReqReduction: Option[BigDecimal],
  reagent3Quantity: Option[BigDecimal],
  defensiveElementalResistance: Option[BigDecimal],
  modifiedSkillName4: Option[String],
  hideFeet: Option[BigDecimal],
  d: Option[String],
  offensiveSlowLightningMax: Option[BigDecimal],
  offensiveLightningMax: Option[BigDecimal],
  reagentBaseBaseName: Option[ListOrItem[String]]
)
object allItems_2 {
  implicit val codecJson: Codec.AsObject[allItems_2] = deriveCodec
}

case class allItems_compat(item1: allItems_1, item2: allItems_2)
object allItems_compat {
  val encodeJson: Encoder.AsObject[allItems_compat] = {
    val enc1: Encoder.AsObject[allItems_1] = implicitly
    val enc2: Encoder.AsObject[allItems_2] = implicitly
    Encoder.AsObject.instance { a =>
      val t1 = enc1.encodeObject(a.item1)
      val t2 = enc2.encodeObject(a.item2)
      io.circe.JsonObject.fromIterable(t1.toVector ++ t2.toVector)
    }
  }

  val decodeJson: Decoder[allItems_compat] = {
    val dec1: Decoder[allItems_1] = implicitly
    val dec2: Decoder[allItems_2] = implicitly
    Decoder.instance { a =>
      for {
        x1 <- a.as[allItems_1](dec1)
        x2 <- a.as[allItems_2](dec2)
      } yield allItems_compat(item1 = x1, item2 = x2)
    }
  }

  implicit val codecJson: Codec[allItems_compat] = Codec.from(decodeJson, encodeJson.mapJson(_.dropNullValues))
}
